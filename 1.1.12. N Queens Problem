#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int count = 0;

// Function to check if placing queen at (row, col) is safe
int isSafe(int board[], int row, int col) {
    for (int i = 0; i < row; i++) {
        if (board[i] == col || abs(board[i] - col) == abs(i - row))
            return 0; // Not safe
    }
    return 1; // Safe
}

// Recursive function to solve the N-Queens problem
void solveNQueens(int board[], int row, int n) {
    if (row == n) {
        count++; // Found a valid arrangement
        return;
    }

    for (int col = 0; col < n; col++) {
        if (isSafe(board, row, col)) {
            board[row] = col;
            solveNQueens(board, row + 1, n);
        }
    }
}

int nQueen(int n) {
    int board[n];
    count = 0;
    solveNQueens(board, 0, n);
    return count;
}

int main() {
    int n;
    scanf("%d", &n);

    int solutions = nQueen(n);
    printf("%d\n", solutions);

    return 0;
}

